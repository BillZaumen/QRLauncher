.TH qrl "1" "Jan 2023" "qrl VERSION" "User Commands"
.SH NAME
qrl \- open browser windows from image files containing QR codes
.SH SYNOPSIS
.PP
.B
qrl
[\fI\,OPTION\/\fR]... [\fI\,FILENAME\/\fR]...
.br
.B
qrl
[\fI\,OPTION\/\fR]...
.B \-

.SH DESCRIPTION
.PP
The program qrl opens a window that allows image files to be dragged
or pasted into it.  If an image file recognized by Java is dragged
into the drop location or appears on the command line, a QR code (if
one exists) in the image will be read and decoded to produce a URL or
text and the default browser will be "asked" to visit
that URL or display that text.  A text window displays the file names and
the URL's they encode, or a status indication if a URL cannot be
decoded. When a QR Code encodes text that is not a URL, the text will
be stored in a temporary file. For the format HTML, VCARD, and iCalendar,
the temporary file will have the file-name extensions
.BR html ,
.BR vcf ,
and
.B ics
respectively. Otherwise the extension will be
.BR txt ,
and a browser will open that file unless the
.B \-n
option is used.
.PP
The
.I FILENAME
arguments will be resolved against the current working directory for
qrl. If a file name starts with "http:", "https", of "ftp:",
the file name is treated as an absolute URI.  If a file name starts
with "file:", it will be treated as an absolute URI if the next
character is "/" and a URI relative to the current working directory
if the next character is not "/". If qrl is started via a
desktop action, it will use a system-dependent default for the current
working directory, typically the home directory of the user.
One can paste file names that are represented as text.  In this case,
there must be one file name per line.  As usual relative file names are
resolved against the current working directory.
.PP
If the only non-option argument is
.BR \- ,
file names and URLs are read from standard input, with on name or URL
per line.  For example,
.IP
.B cat files.txt | egrep '.png$' | qrl \-
.PP
will extract all the lines from the file
.B files.txt
that end with
.B .png
and arrange for
.B qrl
to  decode any QR codes and pass the URIs found to a browser.
.PP
If multiple images are provided, a browser may respond quickly to the
first but with a noticeable delay for the others. Passing a URL to a
browser is handled by the JDK and may not be available on all implementations.
If not available, one can simply paste the decoded URI into a browser.
.PP
With the
.B \-e
option, all temporary files will be removed when
.B qrl
exits. For some operating systems and browsers, and possibly JREs, this
may result in a race condition in which a temporary file is removed before
the browser opens it.  As a result, the use of the
.B \-e
option is discouraged unless the QR codes provided via the command line
encode only URIs.
.P
Finally,
.B qrl
can create QR codes. In this case, the text being encoded is read from
standard input and must be UTF-8 encoded. An output file, which must
include a file-name extension indicating the image type is specified with
the
.B \-o
option, which must be present to create a QR code.  The
.BR \-w ,
.BR \-h ,
.BR \-f ,
.BR \-F ,
.BR \-B ,
and
.B \-L
options are described below and are optional.
.SH OPTIONS
.PP
The options for reading QR codes are
.TP
.B \-\-
End of options.  This is useful if a command line argument immediately
following the options is the file name "-n" or "-p".
.TP
.B \-e
Exit immediately after processing files and URLs provided on the
command line instead of opening a window. Unless suppressed by a
.B \-n
option, URLs found by decoding QR codes will be opened by a browser
(on systems that support this).
.TP
.BI \-d\  CWD
Set the current working directory for QRL to
.IR CWD .
This directory will be used to resolve relative file names, but
not URLs or URIs except for
.B file
URLs.  The main use of the
.B \-d
option occurs when relative file names are read from standard input and
the corresponding files are in a different directory.
.TP
.B \-n
Do not launch a web browser and instead just list the image files and
the URL they encoded or some status and possibly error messages if a
URL cannot be found.  If a QR code does not encode a URL, the URL shown
will be enclosed in square brackets and will point to  a temporary file.
The contents of this temporary file may be displayed as well.
If the
.B \-e
option is in effect with the
.B \-n
option, the
.B \-p
option is implied.
.TP
.B \-p
Automatically print the file names and corresponding URLs or status to
standard output.
.P
The options for writing QR codes are
.TP
.BI \-u\  URI
The URI to use as an input.
The
.B \-u
and the
.B \-i
options are mutually exclusive.
.TP
.BI \-i\  PATHNAME
The path name for the input file. If missing, or if
.I PATHNAME
is
.BR \- ,
standard input is used. The
.B \-u
and the
.B \-i
options are mutually exclusive.
.TP
.BI \-o\  PATHNAME
The path name for the output file. IF the path is "-", the image is
written to standard output.  This option must be present to create a
QR code unless the only non-option argument is a single file ending
in the file-name extension
.BR  qrl .
.TP
.BI \-w\  WIDTH
The width of the QR CODE in pixels. The default is 100.
.TP
.BI \-h\  HEIGHT
The height of the QR CODE in pixels. The default is 100.
.TP
.BI \-L\  LEVEL
The error-correction level for the QR code. Legal values are
.B L
(allow for up to 7% damage),
.B M
(allow for up to 15% damage),
.B Q
(allow for up to 25% damage), and
.B H
(allow for up to 30% damage).
.TP
.B \-t
The input will be trimmed by removing leading and trailing whitespace.
This is useful when generating a QR code for a URI. 
.TP
.BI \-f\  FORMAT
Set the format of the image file that will be generated to
.IR FORMAT .
If this option is missing, the format will be guessed from the output
file's file-name extension.  Supported formats include
.BR png ,
.BR jpeg ,
.BR gif ,
.BR bmp ,
.BR wbmp ,
.BR ps ,
and optionally,
.BR svg .
SVG will be available if the libosgbatik package was installed. The
libosgbatik package provides the format
.B svgz
as an alias and the output file will then contain GZIP-compressed SVG.
For the SVG files generated by
.BR qrl,
GZIP compression is highly effective because numerical values tend to
be repeated.
.TP
.BI \-F\  COLOR
The foreground color will be set to
.BR COLOR ,
which is any CSS color as described in <https://www.w3.org/TR/css-color-3/>.
.TP
.BI \-B\  COLOR
The background color will be set to
.BR COLOR ,
which is any CSS color as described in <https://www.w3.org/TR/css-color-3/>.
.PP
The options for listing information about colors and format names are
the following:
.TP
.B \-\-colors
List named CSS colors, on standard output and immediately exit.  The
list will start with
.BR transparent ,
which is not really a color, and then list the names of opaque colors
in alphabetical order.
.TP
.B \-\-formats
List the standard names for the image formats that are supported.
For
.BR svg ,
the libosgbatik package will provide an alias
.BR svgz .
When that alias is specified, the file name extension should be
.B .svgz
and the SVG data will be compressed using
.BR gzip . For
.BR ps ,
(for PostScript) one will typically want to convert the Postscript file to
EPS (Encapsulated PostScript). On Linux systems, the programs
.B ps2eps
or
.B ps2epsi
can be used.
.TP
.B \-\-format-aliases
List the standard names for the image formats that are supported
and their aliases.
.SH CSS Color Syntax
.PP
In addition to using the names printed by running the command
.IP
qrl --colors
.PP
colors can be specified as follows:
.TP
.BI # RRGGBB
This specifies an opaque color where
.I RR
is a two-digit hexadecimal number providing the value of the red component of
the color,
.I GG
is a two-digit hexadecimal number providing the value of the green component of
the color, and
.I BB
is a two-digit hexadecimal number providing the value of the blue component of
the color.  The specification #000000 is pure black and #ffffff is pure white.
.TP
.B rgb(\fIRED\fB,\fIGREEEN\fB,\fIBLUE\fB)
is a color whose components are either numbers in the range [0, 255] or a
floating point number followed by a % in the range [0, 100].
.TP
.B rgba(\fIRED\fB,\fIGREEEN\fB,\fIBLUE\fB,\fIALPHA\fB)
is a color whose red, green, and blue components are either numbers in
the range [0, 255] or a floating point number followed by a % in the
range [0, 100], and whose alpha component is in the range [0.0,1.0].
.TP
.B hsl(\fIHUE\fB,\fISATURATION\fB%,\fILIGHTNESS\fB%)
is a color whose hue is in the range [0, 350], whose saturation is in
the range [0, 100], and whose lightness is in the range [0, 100].
.TP
.B hsla(\fIHUE\fB,\fISATURATION\fB%,\fILIGHTNESS\fB%,\fIALPHA\fB)
is a color whose hue is in the range [0, 350], whose saturation is in
the range [0, 100], and whose lightness is in the range [0, 100] , and
whose alpha component is in the range [0.0,1.0].
.PP
As a reminder, CSS color specifications can include characters (e.g.,
parentheses) that are treated specially by shells and have to be quoted.
.SH AUTHOR
.PP
Written by Bill Zaumen, using the ZXing library for decoding and generating
QR codes.
\"  LocalWords:  qrl fI fR URL's TP CWD http https URIs JDK URI XZing
\"  LocalWords:  Zaumen br VCARD iCalendar html vcf ics txt egrep png
\"  LocalWords:  JREs UTF PATHNAME whitespace jpeg gif bmp wbmp ps GG
\"  LocalWords:  svg libosgbatik svgz gzip PostScript EPS eps epsi fB
\"  LocalWords:  RRGGBB ffffff rgb fIRED fIGREEEN fIBLUE rgba fIALPHA
\"  LocalWords:  hsl fISATURATION hsla fILIGHTNESS fIHUE
\"  LocalWords:  ZXing
